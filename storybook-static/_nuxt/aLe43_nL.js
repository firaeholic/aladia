import{_ as I}from"./DlAUqK2U.js";import{D as v,E as V,H as l}from"./RK4kQ0Je.js";const x={methods:{limitInput(i,e){const s=e.target.value.replace(/\D/g,"");e.target.value=s,s.length>1&&(e.target.value=s.charAt(0));const a=[...this.pinValues];a[i]=e.target.value,this.$emit("update:pinValues",a),this.pinValues=a,s&&i<a.length-1&&this.$refs[`pinInput${i+1}`].focus()}},name:"Codefield",props:{pinValues:{type:Array,required:!1}}},_={class:"flex justify-center items-center mt-24 gap-5"},h=["value"],y=["value"],C=["value"],b=["value"],B=["value"],E=["value"];function O(i,e,n,s,a,u){return v(),V("div",_,[l("input",{ref:"pinInput0",value:n.pinValues[0],type:"text",class:"number-input num1",maxlength:"1",onInput:e[0]||(e[0]=t=>u.limitInput(0,t))},null,40,h),l("input",{ref:"pinInput1",value:n.pinValues[1],type:"text",class:"number-input num2",maxlength:"1",onInput:e[1]||(e[1]=t=>u.limitInput(1,t))},null,40,y),l("input",{ref:"pinInput2",value:n.pinValues[2],type:"text",class:"number-input num3",maxlength:"1",onInput:e[2]||(e[2]=t=>u.limitInput(2,t))},null,40,C),l("input",{ref:"pinInput3",value:n.pinValues[3],type:"text",class:"number-input num4",maxlength:"1",onInput:e[3]||(e[3]=t=>u.limitInput(3,t))},null,40,b),l("input",{ref:"pinInput4",value:n.pinValues[4],type:"text",class:"number-input num5",maxlength:"1",onInput:e[4]||(e[4]=t=>u.limitInput(4,t))},null,40,B),l("input",{ref:"pinInput5",value:n.pinValues[5],type:"text",class:"number-input num6",maxlength:"1",onInput:e[5]||(e[5]=t=>u.limitInput(5,t))},null,40,E)])}const k=I(x,[["render",O]]),F={title:"Organisms/Codefield",component:k},p={args:{pinValues:["1","2","3","4","5","6"]}},r={args:{pinValues:["","","","","",""]}};var o,m,d;p.parameters={...p.parameters,docs:{...(o=p.parameters)==null?void 0:o.docs,source:{originalSource:`{
  args: {
    pinValues: ['1', '2', '3', '4', '5', '6']
  }
}`,...(d=(m=p.parameters)==null?void 0:m.docs)==null?void 0:d.source}}};var c,f,g;r.parameters={...r.parameters,docs:{...(c=r.parameters)==null?void 0:c.docs,source:{originalSource:`{
  args: {
    pinValues: ['', '', '', '', '', '']
  }
}`,...(g=(f=r.parameters)==null?void 0:f.docs)==null?void 0:g.source}}};const S=["CodeFilled","CodeUnfilled"];export{p as CodeFilled,r as CodeUnfilled,S as __namedExportsOrder,F as default};
